# CantoneseScribe Production Environment Configuration
# WARNING: This file contains production settings and should be deployed with secure environment variable management

# ==================================================
# APPLICATION ENVIRONMENT
# ==================================================
ENVIRONMENT=production
DEBUG=false
NODE_ENV=production

# ==================================================
# FRONTEND CONFIGURATION
# ==================================================
# Production API URLs (adjust based on Vercel deployment)
VITE_API_BASE_URL=https://your-domain.vercel.app/api/v1
VITE_WS_BASE_URL=wss://your-domain.vercel.app/ws

# Feature flags for production
VITE_ENABLE_FILE_UPLOAD=true
VITE_ENABLE_WEBSOCKET=true
VITE_ENABLE_PAYMENTS=true

# Production logging
VITE_DEBUG_MODE=false
VITE_LOG_LEVEL=error

# ==================================================
# BACKEND API CONFIGURATION  
# ==================================================
API_PREFIX=/api/v1

# CORS configuration for production
ALLOWED_ORIGINS=https://your-domain.vercel.app,https://www.your-domain.com
ALLOWED_HOSTS=your-domain.vercel.app,www.your-domain.com

# ==================================================
# DATABASE CONFIGURATION (SUPABASE)
# ==================================================
# Supabase Production Database
DATABASE_URL=postgresql://postgres:[PASSWORD]@db.[PROJECT_REF].supabase.co:5432/postgres
SUPABASE_URL=https://[PROJECT_REF].supabase.co
SUPABASE_KEY=[SUPABASE_ANON_KEY]
SUPABASE_SERVICE_KEY=[SUPABASE_SERVICE_ROLE_KEY]

# ==================================================
# EXTERNAL API SERVICES
# ==================================================
# OpenAI API (for Whisper transcription)
OPENAI_API_KEY=[OPENAI_API_KEY]

# Google Cloud Platform (for Speech-to-Text & Translation)
GOOGLE_APPLICATION_CREDENTIALS=/var/task/google-credentials.json
GOOGLE_CLOUD_CREDENTIALS=[BASE64_ENCODED_SERVICE_ACCOUNT_JSON]
GOOGLE_TRANSLATE_API_KEY=[GOOGLE_TRANSLATE_API_KEY]

# ==================================================
# REDIS CONFIGURATION (UPSTASH)
# ==================================================
REDIS_URL=redis://default:[PASSWORD]@[UPSTASH_ENDPOINT]:6379
REDIS_PASSWORD=[UPSTASH_PASSWORD]
QUEUE_NAME=transcription_queue_prod

# ==================================================
# STRIPE PAYMENT PROCESSING
# ==================================================
# Stripe Live Keys (NOT test keys for production)
STRIPE_PUBLIC_KEY=pk_live_[STRIPE_LIVE_PUBLISHABLE_KEY]
STRIPE_SECRET_KEY=sk_live_[STRIPE_LIVE_SECRET_KEY]
STRIPE_WEBHOOK_SECRET=whsec_[STRIPE_LIVE_WEBHOOK_SECRET]
VITE_STRIPE_PUBLISHABLE_KEY=pk_live_[STRIPE_LIVE_PUBLISHABLE_KEY]

# ==================================================
# FILE STORAGE & CDN (CLOUDFLARE R2)
# ==================================================
# Cloudflare R2 Storage
R2_ACCOUNT_ID=[R2_ACCOUNT_ID]
R2_ACCESS_KEY_ID=[R2_ACCESS_KEY_ID]
R2_SECRET_ACCESS_KEY=[R2_SECRET_ACCESS_KEY]
R2_BUCKET_NAME=cantonese-scribe-prod
R2_PUBLIC_URL=https://cdn.your-domain.com

# File storage limits for production
MAX_FILE_SIZE=100000000
TEMP_DIR=/tmp/cantonese-scribe
UPLOAD_DIR=/tmp/cantonese-scribe/uploads
PROCESSED_DIR=/tmp/cantonese-scribe/processed

# ==================================================
# PERFORMANCE & SCALING CONFIGURATION
# ==================================================
# Production scaling settings
MAX_CONCURRENT_JOBS=10
JOB_TIMEOUT=1800
CLEANUP_INTERVAL=3600

# Rate limiting for production
RATE_LIMIT_REQUESTS=1000
RATE_LIMIT_WINDOW=3600

# ==================================================
# COST MANAGEMENT
# ==================================================
# Production cost thresholds
MAX_DAILY_COST=100.0
WHISPER_COST_PER_MINUTE=0.006
COST_ALERT_THRESHOLD=80.0

# ==================================================
# SECURITY CONFIGURATION
# ==================================================
# JWT Configuration (use strong secret in production)
SECRET_KEY=[STRONG_JWT_SECRET_KEY_256_BITS]
ACCESS_TOKEN_EXPIRE_MINUTES=60
ALGORITHM=HS256

# ==================================================
# MONITORING & ALERTING
# ==================================================
# Sentry for error tracking
SENTRY_DSN=[SENTRY_DSN]
SENTRY_ENVIRONMENT=production
SENTRY_TRACES_SAMPLE_RATE=0.1

# DataDog APM (optional)
DATADOG_API_KEY=[DATADOG_API_KEY]
DATADOG_APP_KEY=[DATADOG_APP_KEY]

# UptimeRobot webhook endpoints
UPTIME_ALERT_WEBHOOK=[UPTIME_ROBOT_WEBHOOK_URL]

# Mixpanel Analytics
MIXPANEL_TOKEN=[MIXPANEL_PROJECT_TOKEN]

# ==================================================
# VERCEL SPECIFIC CONFIGURATION
# ==================================================
# Vercel Edge Functions region preferences
VERCEL_REGION=iad1

# Function memory and timeout
VERCEL_FUNCTION_MEMORY=1024
VERCEL_FUNCTION_TIMEOUT=300

# ==================================================
# DEPLOYMENT CONFIGURATION
# ==================================================
# Build configuration
BUILD_COMMAND=npm run build
INSTALL_COMMAND=npm ci && pip install -r requirements.txt
OUTPUT_DIRECTORY=dist

# Git deployment settings
DEPLOY_ON_PUSH=true
PREVIEW_DEPLOYMENTS=true
PRODUCTION_BRANCH=main